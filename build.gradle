plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id "java"
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

apply plugin: 'java'


group = mod_version
version = mod_group_id

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {

    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true


    runs {

        configureEach {
            workingDirectory project.file('run')


            property 'forge.logging.markers', 'REGISTRIES'


            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id

        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }


        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }


dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation 'org.apache.logging.log4j:log4j-core:2.12.4'
    implementation 'org.jdom:jdom2:2.0.6.1'
    implementation 'org.ow2.asm:asm:6.0'
    implementation 'org.ow2.asm:asm-commons:6.0'
    implementation 'commons-io:commons-io:2.7'
    implementation 'org.apache.ant:ant:1.9.16'
    shadow 'com.mysql:mysql-connector-j:8.1.0'
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version       : forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors         : mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

shadowJar {
    configurations = [project.configurations.implementation]
    archiveBaseName.set('shadow')
    archiveClassifier.set('')
    archiveVersion.set('')
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([


                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : mod_authors,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    finalizedBy 'reobfJar'
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}


